# EditorConfig is awesome:http://EditorConfig.org


###############################
# Core EditorConfig Options   #
###############################

root = true

# All files
[*]
indent_style              = space
indent_size               = 2
#end_of_line               = crlf
#charset                   = utf-8-bom
trim_trailing_whitespace  = true
insert_final_newline      = false


#########################
# File Extension Settings
#########################

# Visual Studio Solution Files
[*.sln]
indent_style = tab

# Visual Studio XML Project Files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML Configuration Files
[*.{xml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

# JSON Files
[*.{json,json5}]
indent_size = 2

# Markdown Files
[*.md]
trim_trailing_whitespace = false

# Web Files
[*.{htm,html,js,ts,tsx,css,sass,scss,less,vue}]
indent_size = 2
insert_final_newline = true

# Batch Files
[*.{cmd,bat}]

# Bash Files
[*.sh]
end_of_line = lf

#################################
# C# .Net Editor Config Options #
#################################

###########################
# .NET Language Conventions
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#language-conventions
###########################

[*.cs]
indent_size               = 4

# "This." and "Me." qualifiers: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#this_and_me
dotnet_style_qualification_for_field                               = true : warning
dotnet_style_qualification_for_property                            = true : warning
dotnet_style_qualification_for_method                              = true : warning
dotnet_style_qualification_for_event                               = true : warning

# Language keywords instead of framework type names for type references: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#language_keywords
dotnet_style_predefined_type_for_locals_parameters_members         = true : warning
dotnet_style_predefined_type_for_member_access                     = true : warning

# Modifier preferences: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#normalize_modifiers
dotnet_style_require_accessibility_modifiers                       = always : warning
dotnet_style_readonly_field                                        = true : warning
csharp_preferred_modifier_order                                    = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async : warning

# CSharp and Visual Basic code style settings: 
dotnet_style_parentheses_in_arithmetic_binary_operators            = always_for_clarity : suggestion
dotnet_style_parentheses_in_relational_binary_operators            = always_for_clarity : suggestion
dotnet_style_parentheses_in_other_binary_operators                 = always_for_clarity : suggestion
dotnet_style_parentheses_in_other_operators                        = never_if_unnecessary : suggestion

# Expression-level preferences: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#expression_level
dotnet_style_object_initializer                                    = true : warning
dotnet_style_collection_initializer                                = true : warning
dotnet_style_explicit_tuple_names                                  = true : warning
dotnet_style_prefer_inferred_tuple_names                           = true : warning
dotnet_style_prefer_inferred_anonymous_type_member_names           = true : warning
dotnet_style_prefer_auto_properties                                = true : suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method   = true : warning
dotnet_style_prefer_conditional_expression_over_assignment         = true : suggestion
dotnet_style_prefer_conditional_expression_over_return             = true : suggestion

# Null-checking preferences: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#null_checking
dotnet_style_coalesce_expression                                   = true : warning
dotnet_style_null_propagation                                      = true : warning

# Implicit and explicit types: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#var
csharp_style_var_for_built_in_types                                = false : warning
csharp_style_var_when_type_is_apparent                             = true : suggestion
csharp_style_var_elsewhere                                         = true : suggestion

# Expression-bodied members: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#expression_bodied_members
csharp_style_expression_bodied_methods                             = true : warning
csharp_style_expression_bodied_constructor                         = true : warning
csharp_style_expression_bodied_operators                           = true : warning
csharp_style_expression_bodied_properties                          = true : warning
csharp_style_expression_bodied_indexers                            = true : warning
csharp_style_expression_bodied_accessors                           = true : warning

# Pattern matching: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#pattern_matching
csharp_style_pattern_matching_over_is_with_cast_check              = true : warning
csharp_style_pattern_matching_over_as_with_null_check              = true : warning

# Inlined variable declarations: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#inlined_variable_declarations
csharp_style_inlined_variable_declaration                          = true : warning

# Expression-level preferences: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#expression_level_csharp
csharp_prefer_simple_default_expression                            = true : warning
csharp_style_deconstructed_variable_declaration                    = true : suggestion
csharp_style_pattern_local_over_anonymous_function                 = true : warning

# "Null" checking preferences: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#null_checking_csharp
csharp_style_throw_expression                                      = true : warning
csharp_style_conditional_delegate_call                             = true : warning

# C# formatting conventions
# Code block preferences: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#code_block
csharp_prefer_braces                                               = true : warning

# Organize usings: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#net-formatting-settings
dotnet_sort_system_directives_first                                = true

# C# formatting settings: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#c-formatting-settings
csharp_new_line_before_open_brace                                  = all
csharp_new_line_before_else                                        = true
csharp_new_line_before_catch                                       = true
csharp_new_line_before_finally                                     = true
csharp_new_line_before_members_in_object_initializers              = true
csharp_new_line_before_members_in_anonymous_types                  = true
csharp_new_line_between_query_expression_clauses                   = true

# Indentation options: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#indent
csharp_indent_case_contents                                        = true
csharp_indent_switch_labels                                        = true
csharp_indent_labels                                               = one_less_than_current

# Spacing options: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#spacing
csharp_space_after_cast                                                   = fasle
csharp_space_after_keywords_in_control_flow_statements                    = true
csharp_space_between_method_declaration_parameter_list_parentheses        = false
csharp_space_between_method_call_parameter_list_parentheses               = false
csharp_space_between_parentheses                                          = expressions
csharp_space_before_colon_in_inheritance_clause                           = true
csharp_space_after_colon_in_inheritance_clause                            = true
csharp_space_around_binary_operators                                      = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses  = false
csharp_space_between_method_call_name_and_opening_parenthesis             = false
csharp_space_between_method_call_empty_parameter_list_parentheses         = false

# Wrapping options: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#wrapping
csharp_preserve_single_line_statements                             = false
csharp_preserve_single_line_blocks                                 = true

###############################
# Naming Conventions: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions
###############################

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization               = pascal_case

dotnet_naming_style.camel_case_style.capitalization                = camel_case

dotnet_naming_style.I_prefix_style.required_prefix                 = I
dotnet_naming_style.I_prefix_style.capitalization                  = pascal_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity  = warning
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols   = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style     = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds             = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities   = *
dotnet_naming_symbols.constant_fields.required_modifiers           = const

# Use PascalCase for public fields
dotnet_naming_rule.pascal_case_for_public_fields.severity          = warning
dotnet_naming_rule.pascal_case_for_public_fields.symbols           = public_fields
dotnet_naming_rule.pascal_case_for_public_fields.style             = pascal_case_style
dotnet_naming_symbols.public_fields.applicable_kinds               = field
dotnet_naming_symbols.public_fields.applicable_accessibilities     = public

# Interfaces must be PascalCase and have an I prefix
dotnet_naming_rule.interfaces_start_with_I.severity                = warning
dotnet_naming_rule.interfaces_start_with_I.symbols                 = any_interface
dotnet_naming_rule.interfaces_start_with_I.style                   = I_prefix_style
dotnet_naming_symbols.any_interface.applicable_accessibilities     = *
dotnet_naming_symbols.any_interface.applicable_kinds               = interface

# Classes and namespaces must be PascalCase
dotnet_naming_rule.general_naming.severity                         = warning
dotnet_naming_rule.general_naming.symbols                          = general
dotnet_naming_rule.general_naming.style                            = pascal_case_style
dotnet_naming_symbols.general.applicable_kinds                     = class,namespace
dotnet_naming_symbols.general.applicable_accessibilities           = *

# Private members must be capitalized (public_members_must_be_capitalized)
dotnet_naming_rule.private_members_must_be_lowercase.symbols        = private_symbols
dotnet_naming_symbols.private_symbols.applicable_kinds              = property,method,field,enum,event,delegate
dotnet_naming_symbols.private_symbols.applicable_accessibilities    = private,protected

dotnet_naming_rule.private_members_must_be_lowercase.style          = camel_case_style

dotnet_naming_rule.private_members_must_be_lowercase.severity       = warning

# Public members must be capitalized (public_members_must_be_capitalized)
dotnet_naming_rule.public_members_must_be_capitalized.symbols       = public_symbols
dotnet_naming_symbols.public_symbols.applicable_kinds               = property,method,field,enum,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities     = public
dotnet_naming_symbols.public_symbols.required_modifiers             = readonly

dotnet_naming_rule.public_members_must_be_capitalized.style         = first_word_upper_case_style
dotnet_naming_style.first_word_upper_case_style.capitalization      = first_word_upper

dotnet_naming_rule.public_members_must_be_capitalized.severity      = warning

